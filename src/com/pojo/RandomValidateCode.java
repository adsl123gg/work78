package com.pojo;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Map;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.util.UUID;

public class RandomValidateCode {

	 public static final String RANDOMCODEKEY = "RANDOMVALIDATECODEKEY";//放到session中的key
	    private Random random = new Random();
	    private String randString = "123456789";//随机产生的字符串
	    
	    private int width = 80;//图片宽
	    private int height = 26;//图片高
	    private int lineSize = 40;//干扰线数量
	    private int result=0;//存放结果
	    
	    /*
	     * 获得数字字体
	     */
	    private Font getFont(){
	        return new Font("Fixedsys",Font.CENTER_BASELINE,18);
	    }
	    /*
	     * 获得干扰线颜色
	     */
	    private Color getRandColor(int fc,int bc){
	        if(fc > 255)
	            fc = 255;
	        if(bc > 255)
	            bc = 255;
	        int r = fc + random.nextInt(bc-fc-16);
	        int g = fc + random.nextInt(bc-fc-14);
	        int b = fc + random.nextInt(bc-fc-18);
	        return new Color(r,g,b);
	    }
	    /**
	     * 生成随机图片
	     */
	    public void getRandcode(Map<String,Object> session) {
	        
	        //BufferedImage类是具有缓冲区的Image类,Image类是用于描述图像信息的类
	        BufferedImage image = new BufferedImage(width,height,BufferedImage.TYPE_INT_BGR);
	        Graphics g = image.getGraphics();//产生Image对象的Graphics对象,改对象可以在图像上进行各种绘制操作
	        g.fillRect(0, 0, width, height);
	        g.setFont(new Font("Times New Roman",Font.ROMAN_BASELINE,18));
	        g.setColor(getRandColor(110, 133));
	        
	        //绘制干扰线
	        for(int i=0;i<=lineSize;i++){
	            drowLine(g);
	        }
	        
	        //存储随机数字
	        String randomString = "";
	       /* for(int i=1;i<=stringNum;i++){
	            randomString=drowString(g,randomString,i);
	        }*/
	        
	        //绘制第一个数字
	        randomString=drowString(g,0);
	        result+=Integer.parseInt(randomString);
	        //绘制 +
	        g.translate(random.nextInt(3), random.nextInt(3));
	        g.drawString("+", 20, 18);
	        //绘制第二个数字
	        randomString=drowString(g,3);
	        result+=Integer.parseInt(randomString);
	       //绘制 =
	        g.translate(random.nextInt(3), random.nextInt(3));
	        g.drawString("=", 60, 18);
	        
	        session.remove(RANDOMCODEKEY);
	        session.put(RANDOMCODEKEY, result);
	        g.dispose();//释放graphic资源

	        File file=new File("c:/image/a.jpeg");
	        
	        try {
	           ImageIO.write(image, "JPEG", file);
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }
	    /*
	     * 绘制数字
	     */
	    private String drowString(Graphics g,int i){
	        g.setFont(getFont());
	        g.setColor(new Color(random.nextInt(101),random.nextInt(111),random.nextInt(121)));
	        String rand = getRandomString(random.nextInt(randString.length()))+getRandomString(random.nextInt(randString.length()));
	        g.translate(random.nextInt(3), random.nextInt(3));//将图形上下文的原点平移到当前坐标系中的点 (x, y)
	        g.drawString(rand, 13*i, 18);
	        return rand;
	    }
	    /*
	     * 绘制干扰线
	     */
	    private void drowLine(Graphics g){
	        int x = random.nextInt(width);
	        int y = random.nextInt(height);
	        int xl = random.nextInt(13);
	        int yl = random.nextInt(15);
	        g.drawLine(x, y, x+xl, y+yl);
	    }
	    /*
	     * 获取随机的字符
	     */
	    public String getRandomString(int num){
	        //return String.valueOf(randString.charAt(num));
	    	return randString.charAt(num)+"";
	    }
	
}
